// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum ProductStatus {
  IN_STOCK
  OUT_OF_STOCK
  LOW_STOCK
  PREORDER
  DISCONTINUED
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  slug        String         @unique
  description String?
  price       Float
  imageUrl    String
  categoryId  Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  category    Category       @relation(fields: [categoryId], references: [id])
  images      ProductImage[]

  // Stock Management
  status      ProductStatus  @default(IN_STOCK)
  quantity    Int?
  
  // Visibility and Marketing
  isPublished Boolean        @default(true)
  isFeatured  Boolean        @default(false)
  isNew       Boolean        @default(true)
  
  // Product Details
  sku         String?
  weight      Float?
  dimensions  Json?          // Stored as JSONB in PostgreSQL
  manufacturer String?
  
  // SEO and Analytics
  metaTitle       String?
  metaDescription String?

  @@index([categoryId])
  @@index([status])
  @@index([isPublished])
  @@index([isFeatured])
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  order     Int      @default(0)
  createdAt DateTime @default(now())
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model CompanyInfo {
  id           Int      @id @default(autoincrement())
  telephone    String
  whatsapp     String
  address      String
  workSchedule String
  email        String?
  website      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
